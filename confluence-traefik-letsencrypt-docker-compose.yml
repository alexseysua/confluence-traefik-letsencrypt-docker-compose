# Confluence with Let's Encrypt in a Docker Compose

# Author
# hey, Iâ€™m Vladimir Mikhalev, but my friends call me Valdemar.

# My website with detailed IT guides: https://www.heyvaldemar.com/
# Follow me on YouTube: https://www.youtube.com/channel/UCf85kQ0u1sYTTTyKVpxrlyQ?sub_confirmation=1
# Follow me on Twitter: https://twitter.com/heyValdemar
# Follow me on Instagram: https://www.instagram.com/heyvaldemar/
# Follow me on Facebook: https://www.facebook.com/heyValdemarFB/
# Follow me on TikTok: https://www.tiktok.com/@heyvaldemar
# Follow me on [LinkedIn](https://www.linkedin.com/in/heyvaldemar/)
# Follow me on [GitHub](https://github.com/heyvaldemar)

# Communication
# Chat with IT pros on Discord: https://discord.com/invite/D7fGMYjdR9
# Chat with IT pros on Telegram: https://t.me/heyValdemarCOMchat
# Reach me at ask@sre.gg

# Give Thanks
# Support on GitHub: https://github.com/sponsors/heyValdemar
# Support on Patreon: https://www.patreon.com/heyValdemar
# Support on BuyMeaCoffee: https://www.buymeacoffee.com/heyValdemar
# Support on Ko-fi: https://ko-fi.com/heyValdemar
# Support on PayPal: https://www.paypal.com/paypalme/heyValdemarCOM

# Install Docker Engine and Docker Compose by following my guide: https://www.heyvaldemar.com/install-docker-engine-and-docker-compose-on-ubuntu-server/

# Run confluence-restore-application-data.sh to restore application data if needed.
# Run confluence-restore-database.sh to restore database if needed.

# Deploy Confluence server with a Docker Compose using the command:
# docker compose -f confluence-traefik-letsencrypt-docker-compose.yml -p confluence up -d

# Detailed installation guide can be found on my website: https://www.heyvaldemar.com/install-confluence-with-docker-compose/

volumes:
  confluence-data:
  confluence-postgres:
  confluence-data-backups:
  confluence-postgres-backups:
  traefik-certificates:

services:
  postgres:
    # Image tag (replace with yours)
    image: postgres:14
    volumes:
      - confluence-postgres:/var/lib/postgresql/data
    environment:
      # Database name (replace with yours)
      POSTGRES_DB: confluencedb
      # Database user (replace with yours)
      POSTGRES_USER: confluencedbuser
      # Database password (replace with yours)
      POSTGRES_PASSWORD: wDyzDH8MowfpuwGyBfNcnaV
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -h 127.0.0.1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  confluence:
    # Image tag (replace with yours)
    image: atlassian/confluence-server:7.19
    volumes:
      - confluence-data:/var/atlassian/application-data/confluence
    environment:
      # Application memory (replace with yours)
      JVM_MINIMUM_MEMORY: 8G
      JVM_MAXIMUM_MEMORY: 8G
      # Confluence URL (replace with yours)
      ATL_PROXY_NAME: confluence.heyvaldemar.net
      ATL_PROXY_PORT: 443
      ATL_TOMCAT_SCHEME: https
      ATL_TOMCAT_SECURE: 'true'
    ports:
      - "8091:8091"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8090/"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 90s
    labels:
      - "traefik.enable=true"
      # Confluence URL (replace with yours)
      - "traefik.http.routers.confluence.rule=Host(`confluence.heyvaldemar.net`)"
      - "traefik.http.routers.confluence.service=confluence"
      - "traefik.http.routers.confluence.entrypoints=websecure"
      - "traefik.http.services.confluence.loadbalancer.server.port=8090"
      - "traefik.http.routers.confluence.tls=true"
      - "traefik.http.routers.confluence.tls.certresolver=letsencrypt"
      - "traefik.http.services.confluence.loadbalancer.passhostheader=true"
      - "traefik.http.routers.confluence.middlewares=compresstraefik"
      - "traefik.http.middlewares.compresstraefik.compress=true"
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      traefik:
        condition: service_healthy

  traefik:
    # Image tag (replace with yours)
    image: traefik:2.8
    command:
      - "--log.level=WARN"
      - "--accesslog=true"
      - "--api.dashboard=true"
      - "--api.insecure=true"
      - "--ping=true"
      - "--ping.entrypoint=ping"
      - "--entryPoints.ping.address=:8082"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"
      - "--providers.docker=true"
      - "--providers.docker.endpoint=unix:///var/run/docker.sock"
      - "--providers.docker.exposedByDefault=false"
      - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
      # Email for Let's Encrypt (replace with yours)
      - "--certificatesresolvers.letsencrypt.acme.email=callvaldemar@gmail.com"
      - "--certificatesresolvers.letsencrypt.acme.storage=/etc/traefik/acme/acme.json"
      - "--metrics.prometheus=true"
      - "--metrics.prometheus.buckets=0.1,0.3,1.2,5.0"
      - "--global.checkNewVersion=true"
      - "--global.sendAnonymousUsage=false"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - traefik-certificates:/etc/traefik/acme
    ports:
      - "80:80"
      - "443:443"
    healthcheck:
      test: ["CMD", "wget", "http://localhost:8082/ping","--spider"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    labels:
      - "traefik.enable=true"
      # Traefik URL (replace with yours)
      - "traefik.http.routers.dashboard.rule=Host(`traefik.confluence.heyvaldemar.net`)"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.entrypoints=websecure"
      - "traefik.http.services.dashboard.loadbalancer.server.port=8080"
      - "traefik.http.routers.dashboard.tls=true"
      - "traefik.http.routers.dashboard.tls.certresolver=letsencrypt"
      - "traefik.http.services.dashboard.loadbalancer.passhostheader=true"
      - "traefik.http.routers.dashboard.middlewares=authtraefik"
      # Basic Authentication for Traefik Dashboard
      # Username: traefikadmin (replace with yours)
      # Passwords must be encoded using MD5, SHA1, or BCrypt https://hostingcanada.org/htpasswd-generator/
      - "traefik.http.middlewares.authtraefik.basicauth.users=traefikadmin:$$2y$$10$$sMzJfirKC75x/hVpiINeZOiSm.Jkity9cn4KwNkRvO7hSQVFc5FLO"
      - "traefik.http.routers.http-catchall.rule=HostRegexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
    restart: unless-stopped

  backups:
    # Image tag (replace with yours)
    image: postgres:14
    # Database backups prune interval (replace with yours). Default is 7 days.
    # find /srv/confluence-postgres/backups -type f -mtime +7 | xargs rm -f

    # Application data backups prune interval (replace with yours). Default is 7 days.
    # find /srv/confluence-application-data/backups -type f -mtime +7 | xargs rm -f

    # Confluence backups interval (replace with yours). Default is 1 day.
    # sleep 24h

    # Run confluence-restore-application-data.sh to restore application data if needed.
    # Run confluence-restore-database.sh to restore database if needed.
    command: sh -c 'sleep 30m
             && while true; do
             PGPASSWORD="$$(echo $$POSTGRES_PASSWORD)"
             pg_dump
             -h postgres
             -p 5432
             -d confluencedb
             -U confluencedbuser | gzip > /srv/confluence-postgres/backups/confluence-postgres-backup-$$(date "+%Y-%m-%d_%H-%M").gz
             && tar -zcpf /srv/confluence-application-data/backups/confluence-application-data-backup-$$(date "+%Y-%m-%d_%H-%M").tar.gz /var/atlassian/application-data/confluence
             && find /srv/confluence-postgres/backups -type f -mtime +7 | xargs rm -f
             && find /srv/confluence-application-data/backups -type f -mtime +7 | xargs rm -f;
             sleep 24h; done'
    volumes:
      - confluence-data:/var/atlassian/application-data/confluence
      # Application data backups location
      - confluence-data-backups:/srv/confluence-application-data/backups
      # Database backups location
      - confluence-postgres-backups:/srv/confluence-postgres/backups
    environment:
      # Database password (replace with yours)
      POSTGRES_PASSWORD: wDyzDH8MowfpuwGyBfNcnaV
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      confluence:
        condition: service_healthy
